name: Docker Build (Reusable)

on:
  workflow_call:
    inputs:
      context:
        description: 'Build context directory'
        required: false
        type: string
        default: './server'
      platforms:
        description: 'Target platforms for build'
        required: false
        type: string
        default: 'linux/amd64'
      push:
        description: 'Whether to push the image'
        required: false
        type: boolean
        default: false
      image-name:
        description: 'Docker image name'
        required: true
        type: string
      registry:
        description: 'Docker registry'
        required: false
        type: string
        default: 'docker.io'
      tags-input:
        description: 'Custom tags (if not using metadata)'
        required: false
        type: string
        default: ''
      use-metadata:
        description: 'Whether to use docker/metadata-action for tags'
        required: false
        type: boolean
        default: false
      login-required:
        description: 'Whether Docker login is required'
        required: false
        type: boolean
        default: false
    secrets:
      registry-username:
        description: 'Registry username'
        required: false
      registry-password:
        description: 'Registry password'
        required: false
    outputs:
      image-digest:
        description: 'Built image digest'
        value: ${{ jobs.build.outputs.digest }}
      image-tags:
        description: 'Built image tags'
        value: ${{ jobs.build.outputs.tags }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: ${{ inputs.push && 'write' || 'read' }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags || inputs.tags-input }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      if: ${{ inputs.login-required }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ secrets.registry-username }}
        password: ${{ secrets.registry-password }}

    - name: Extract metadata (tags, labels) for Docker
      if: ${{ inputs.use-metadata }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ inputs.use-metadata && steps.meta.outputs.tags || inputs.tags-input }}
        labels: ${{ inputs.use-metadata && steps.meta.outputs.labels || '' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image information
      run: |
        echo "Image digest: ${{ steps.build.outputs.digest }}"
        echo "Image tags: ${{ inputs.use-metadata && steps.meta.outputs.tags || inputs.tags-input }}"
